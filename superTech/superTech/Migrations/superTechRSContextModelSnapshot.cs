// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using superTech.Database;

namespace superTech.Migrations
{
    [DbContext(typeof(superTechRSContext))]
    partial class superTechRSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Latin1_General_BIN")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("superTech.Database.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountWithTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BillNumber")
                        .HasColumnType("int");

                    b.Property<bool>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("FkBuyerOrder")
                        .HasColumnType("int")
                        .HasColumnName("FK_BuyerOrder");

                    b.Property<int?>("FkUserId")
                        .HasColumnType("int")
                        .HasColumnName("FK_UserId");

                    b.Property<DateTime>("IssuingDate")
                        .HasColumnType("date");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BillId");

                    b.HasIndex("FkBuyerOrder");

                    b.HasIndex("FkUserId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("superTech.Database.BillItem", b =>
                {
                    b.Property<int>("BillItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FkBillId")
                        .HasColumnType("int")
                        .HasColumnName("FK_BillId");

                    b.Property<int?>("FkProductId")
                        .HasColumnType("int")
                        .HasColumnName("FK_ProductId");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BillItemId");

                    b.HasIndex("FkBillId");

                    b.HasIndex("FkProductId");

                    b.ToTable("BillItems");
                });

            modelBuilder.Entity("superTech.Database.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WebAddress")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("superTech.Database.BuyerOrder", b =>
                {
                    b.Property<int>("BuyerOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Canceled")
                        .HasColumnType("bit");

                    b.Property<bool?>("Confirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("FkUserId")
                        .HasColumnType("int")
                        .HasColumnName("FK_UserId");

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("int");

                    b.HasKey("BuyerOrderId");

                    b.HasIndex("FkUserId");

                    b.ToTable("BuyerOrders");
                });

            modelBuilder.Entity("superTech.Database.BuyerOrderItem", b =>
                {
                    b.Property<int>("BuyerOrderItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FkBuyerOrder")
                        .HasColumnType("int")
                        .HasColumnName("FK_BuyerOrder");

                    b.Property<int?>("FkProductId")
                        .HasColumnType("int")
                        .HasColumnName("FK_ProductId");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BuyerOrderItemsId")
                        .HasName("PK__BuyerOrd__8E1D118BEDBD0F49");

                    b.HasIndex("FkBuyerOrder");

                    b.HasIndex("FkProductId");

                    b.ToTable("BuyerOrderItems");
                });

            modelBuilder.Entity("superTech.Database.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("superTech.Database.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("superTech.Database.News", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("date");

                    b.Property<int?>("FkUserId")
                        .HasColumnType("int")
                        .HasColumnName("FK_UserId");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("NewsId");

                    b.HasIndex("FkUserId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("superTech.Database.Offer", b =>
                {
                    b.Property<int>("OfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateFrom")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("OfferId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("superTech.Database.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("Canceled")
                        .HasColumnType("bit");

                    b.Property<bool?>("Confirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("FkSupplierId")
                        .HasColumnType("int")
                        .HasColumnName("FK_SupplierId");

                    b.Property<int?>("FkUserId")
                        .HasColumnType("int")
                        .HasColumnName("FK_UserId");

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("FkSupplierId");

                    b.HasIndex("FkUserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("superTech.Database.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FkOrderId")
                        .HasColumnType("int")
                        .HasColumnName("FK_OrderId");

                    b.Property<int?>("FkProductId")
                        .HasColumnType("int")
                        .HasColumnName("FK_ProductId");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("FkOrderId");

                    b.HasIndex("FkProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("superTech.Database.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("FkCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("FK_CategoryId");

                    b.Property<int?>("FkUnitOfMeasureId")
                        .HasColumnType("int")
                        .HasColumnName("FK_UnitOfMeasureId");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ImageThumb")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("BrandId");

                    b.HasIndex("FkCategoryId");

                    b.HasIndex("FkUnitOfMeasureId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("superTech.Database.ProductOffer", b =>
                {
                    b.Property<int>("ProductOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FkOfferId")
                        .HasColumnType("int")
                        .HasColumnName("FK_OfferId");

                    b.Property<int?>("FkProductId")
                        .HasColumnType("int")
                        .HasColumnName("FK_ProductId");

                    b.Property<decimal?>("PriceWithDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductOfferId");

                    b.HasIndex("FkOfferId");

                    b.HasIndex("FkProductId");

                    b.ToTable("ProductOffers");
                });

            modelBuilder.Entity("superTech.Database.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("FkProductId")
                        .HasColumnType("int")
                        .HasColumnName("FK_ProductId");

                    b.Property<int?>("FkUserId")
                        .HasColumnType("int")
                        .HasColumnName("FK_UserId");

                    b.Property<int?>("Rating1")
                        .HasColumnType("int")
                        .HasColumnName("Rating");

                    b.HasKey("RatingId");

                    b.HasIndex("FkProductId");

                    b.HasIndex("FkUserId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("superTech.Database.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("superTech.Database.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BankAccount")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WebAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("superTech.Database.UnitsOfMeasure", b =>
                {
                    b.Property<int>("UnitOfMeasureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UnitOfMeasureId")
                        .HasName("PK__UnitsOfM__F36083F1EE73BD8B");

                    b.ToTable("UnitsOfMeasure");
                });

            modelBuilder.Entity("superTech.Database.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("FkCityId")
                        .HasColumnType("int")
                        .HasColumnName("FK_CityId");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("ProfilePicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("date");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.HasIndex("FkCityId");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D1053469742187")
                        .IsUnique();

                    b.HasIndex(new[] { "UserName" }, "UQ__Users__C9F28456803E0209")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("superTech.Database.UsersRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfModification")
                        .HasColumnType("datetime");

                    b.Property<int?>("FkRoleId")
                        .HasColumnType("int")
                        .HasColumnName("FK_RoleId");

                    b.Property<int?>("FkUserId")
                        .HasColumnType("int")
                        .HasColumnName("FK_UserId");

                    b.HasKey("UserRoleId")
                        .HasName("PK__UsersRol__3D978A354EF9B121");

                    b.HasIndex("FkRoleId");

                    b.HasIndex("FkUserId");

                    b.ToTable("UsersRoles");
                });

            modelBuilder.Entity("superTech.Database.Bill", b =>
                {
                    b.HasOne("superTech.Database.BuyerOrder", "FkBuyerOrderNavigation")
                        .WithMany("Bills")
                        .HasForeignKey("FkBuyerOrder")
                        .HasConstraintName("FK__Bills__FK_BuyerO__5FB337D6");

                    b.HasOne("superTech.Database.User", "FkUser")
                        .WithMany("Bills")
                        .HasForeignKey("FkUserId")
                        .HasConstraintName("FK__Bills__FK_UserId__5EBF139D");

                    b.Navigation("FkBuyerOrderNavigation");

                    b.Navigation("FkUser");
                });

            modelBuilder.Entity("superTech.Database.BillItem", b =>
                {
                    b.HasOne("superTech.Database.Bill", "FkBill")
                        .WithMany("BillItems")
                        .HasForeignKey("FkBillId")
                        .HasConstraintName("FK__BillItems__FK_Bi__628FA481");

                    b.HasOne("superTech.Database.Product", "FkProduct")
                        .WithMany("BillItems")
                        .HasForeignKey("FkProductId")
                        .HasConstraintName("FK__BillItems__FK_Pr__6383C8BA");

                    b.Navigation("FkBill");

                    b.Navigation("FkProduct");
                });

            modelBuilder.Entity("superTech.Database.BuyerOrder", b =>
                {
                    b.HasOne("superTech.Database.User", "FkUser")
                        .WithMany("BuyerOrders")
                        .HasForeignKey("FkUserId")
                        .HasConstraintName("FK__BuyerOrde__FK_Us__5812160E");

                    b.Navigation("FkUser");
                });

            modelBuilder.Entity("superTech.Database.BuyerOrderItem", b =>
                {
                    b.HasOne("superTech.Database.BuyerOrder", "FkBuyerOrderNavigation")
                        .WithMany("BuyerOrderItems")
                        .HasForeignKey("FkBuyerOrder")
                        .HasConstraintName("FK__BuyerOrde__FK_Bu__5BE2A6F2");

                    b.HasOne("superTech.Database.Product", "FkProduct")
                        .WithMany("BuyerOrderItems")
                        .HasForeignKey("FkProductId")
                        .HasConstraintName("FK__BuyerOrde__FK_Pr__5AEE82B9");

                    b.Navigation("FkBuyerOrderNavigation");

                    b.Navigation("FkProduct");
                });

            modelBuilder.Entity("superTech.Database.News", b =>
                {
                    b.HasOne("superTech.Database.User", "FkUser")
                        .WithMany("News")
                        .HasForeignKey("FkUserId")
                        .HasConstraintName("FK__News__FK_UserId__440B1D61");

                    b.Navigation("FkUser");
                });

            modelBuilder.Entity("superTech.Database.Order", b =>
                {
                    b.HasOne("superTech.Database.Supplier", "FkSupplier")
                        .WithMany("Orders")
                        .HasForeignKey("FkSupplierId")
                        .HasConstraintName("FK__Orders__FK_Suppl__693CA210");

                    b.HasOne("superTech.Database.User", "FkUser")
                        .WithMany("Orders")
                        .HasForeignKey("FkUserId")
                        .HasConstraintName("FK__Orders__FK_UserI__68487DD7");

                    b.Navigation("FkSupplier");

                    b.Navigation("FkUser");
                });

            modelBuilder.Entity("superTech.Database.OrderItem", b =>
                {
                    b.HasOne("superTech.Database.Order", "FkOrder")
                        .WithMany("OrderItems")
                        .HasForeignKey("FkOrderId")
                        .HasConstraintName("FK__OrderItem__FK_Or__6C190EBB");

                    b.HasOne("superTech.Database.Product", "FkProduct")
                        .WithMany("OrderItems")
                        .HasForeignKey("FkProductId")
                        .HasConstraintName("FK__OrderItem__FK_Pr__6D0D32F4");

                    b.Navigation("FkOrder");

                    b.Navigation("FkProduct");
                });

            modelBuilder.Entity("superTech.Database.Product", b =>
                {
                    b.HasOne("superTech.Database.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FK__Products__BrandI__160F4887");

                    b.HasOne("superTech.Database.Category", "FkCategory")
                        .WithMany("Products")
                        .HasForeignKey("FkCategoryId")
                        .HasConstraintName("FK__Products__FK_Cat__4BAC3F29");

                    b.HasOne("superTech.Database.UnitsOfMeasure", "FkUnitOfMeasure")
                        .WithMany("Products")
                        .HasForeignKey("FkUnitOfMeasureId")
                        .HasConstraintName("FK__Products__FK_Uni__4AB81AF0");

                    b.Navigation("Brand");

                    b.Navigation("FkCategory");

                    b.Navigation("FkUnitOfMeasure");
                });

            modelBuilder.Entity("superTech.Database.ProductOffer", b =>
                {
                    b.HasOne("superTech.Database.Offer", "FkOffer")
                        .WithMany("ProductOffers")
                        .HasForeignKey("FkOfferId")
                        .HasConstraintName("FK__ProductOf__FK_Of__5535A963");

                    b.HasOne("superTech.Database.Product", "FkProduct")
                        .WithMany("ProductOffers")
                        .HasForeignKey("FkProductId")
                        .HasConstraintName("FK__ProductOf__FK_Pr__5441852A");

                    b.Navigation("FkOffer");

                    b.Navigation("FkProduct");
                });

            modelBuilder.Entity("superTech.Database.Rating", b =>
                {
                    b.HasOne("superTech.Database.Product", "FkProduct")
                        .WithMany("Ratings")
                        .HasForeignKey("FkProductId")
                        .HasConstraintName("FK__Ratings__FK_Prod__4F7CD00D");

                    b.HasOne("superTech.Database.User", "FkUser")
                        .WithMany("Ratings")
                        .HasForeignKey("FkUserId")
                        .HasConstraintName("FK__Ratings__FK_User__4E88ABD4");

                    b.Navigation("FkProduct");

                    b.Navigation("FkUser");
                });

            modelBuilder.Entity("superTech.Database.User", b =>
                {
                    b.HasOne("superTech.Database.City", "FkCity")
                        .WithMany("Users")
                        .HasForeignKey("FkCityId")
                        .HasConstraintName("FK__Users__FK_CityId__3B75D760");

                    b.Navigation("FkCity");
                });

            modelBuilder.Entity("superTech.Database.UsersRole", b =>
                {
                    b.HasOne("superTech.Database.Role", "FkRole")
                        .WithMany("UsersRoles")
                        .HasForeignKey("FkRoleId")
                        .HasConstraintName("FK__UsersRole__FK_Ro__412EB0B6");

                    b.HasOne("superTech.Database.User", "FkUser")
                        .WithMany("UsersRoles")
                        .HasForeignKey("FkUserId")
                        .HasConstraintName("FK__UsersRole__FK_Us__403A8C7D");

                    b.Navigation("FkRole");

                    b.Navigation("FkUser");
                });

            modelBuilder.Entity("superTech.Database.Bill", b =>
                {
                    b.Navigation("BillItems");
                });

            modelBuilder.Entity("superTech.Database.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("superTech.Database.BuyerOrder", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("BuyerOrderItems");
                });

            modelBuilder.Entity("superTech.Database.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("superTech.Database.City", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("superTech.Database.Offer", b =>
                {
                    b.Navigation("ProductOffers");
                });

            modelBuilder.Entity("superTech.Database.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("superTech.Database.Product", b =>
                {
                    b.Navigation("BillItems");

                    b.Navigation("BuyerOrderItems");

                    b.Navigation("OrderItems");

                    b.Navigation("ProductOffers");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("superTech.Database.Role", b =>
                {
                    b.Navigation("UsersRoles");
                });

            modelBuilder.Entity("superTech.Database.Supplier", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("superTech.Database.UnitsOfMeasure", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("superTech.Database.User", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("BuyerOrders");

                    b.Navigation("News");

                    b.Navigation("Orders");

                    b.Navigation("Ratings");

                    b.Navigation("UsersRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
